#!/usr/bin/env node

if (require.main !== module) return

var emoji = require('node-emoji')

var app = require('../lib')
var log = require('../lib/log')

var parse = require('optimist')
.usage('Usage: $0 [options]')

.alias('w', 'www')
.describe('www', 'Set www root directory')

.alias('c', 'custom-ports')
.describe('custom-ports', 'Provide custom ports www,admin,couchdb')

.alias('m', 'in-memory')
.describe('in-memory', 'Use a pure in-memory database which will be deleted upon restart')

.alias('h', 'help')
.describe('help', 'Show usage information')

.alias('v', 'verbose')
.alias('d', 'verbose')
.alias('debug', 'verbose')
.describe('loglevel', 'Set the loglevel')
.default('loglevel', 'warn')

log.levels.forEach(function (level) {
  parse = parse.describe(level, 'Set the loglevel to ' + level)
})

var argv = parse.argv

log.levels.some(function (level) {
  if (argv[level]) argv.loglevel = level
  return !!argv[level]
})

if (argv.help) {
  return require('optimist').showHelp()
}

log.raw.level = argv.loglevel

log.verbose('app', 'Initializing')

app.start({
  argv: argv
}, function (err, server, env_config) {
  if (err) return log.error('Failed to start the Hoodie Server', err)

  log.verbose('app', 'Starting')

  server.start(function () {
    console.log(emoji.get('dog') + ' Your Hoodie app has started on ' + env_config.www_link)
    log.verbose('app', 'Serving admin-dashboard at ' + env_config.admin_link)
    log.verbose('app', 'Database running at ' + env_config.couch.url)
  })
})
